(()=>{"use strict";const e={secret:"416c696365"+"00".repeat(27),nonce:"01".repeat(32)},n={secret:"426f62"+"00".repeat(29),nonce:"02".repeat(32)};window.runOfflineTransferTest=async function(){try{console.log("=== Starting Offline Transfer Test ==="),console.log("Step 1: Minting token for Alice...");const o={data:"Test NFT for offline transfer",amount:100},t=await mintToken(JSON.stringify(e),JSON.stringify(o)),i=JSON.parse(t);console.log("Token minted successfully:",i.tokenId),console.log("\nStep 2: Generating Bob's receiving address...");const r=n.secret.match(/.{2}/g),s=n.nonce.match(/.{2}/g);if(!r||!s)throw new Error("Invalid Bob identity format");const a=new Uint8Array(r.map(e=>parseInt(e,16))),c=new Uint8Array(s.map(e=>parseInt(e,16))),l=await window.unicity.SigningService.createFromSecret(a,c),f=await window.unicity.MaskedPredicate.calculateReference(i.token.genesis.data.tokenType,l.algorithm,l.publicKey,window.unicity.HashAlgorithm.SHA256,c),g=(await window.unicity.DirectAddress.create(f)).toJSON();console.log("Bob's receiving address:",g),console.log("\nStep 3: Alice preparing offline transfer to Bob...");const d=await prepareTransfer(JSON.stringify(e),g,JSON.stringify(i),!0),w=JSON.parse(d);console.log("Offline transfer package created"),console.log("Transfer package size:",JSON.stringify(w).length,"bytes"),console.log("\nStep 4: Simulating offline data transfer..."),console.log("In a real scenario, this package would be transferred via NFC"),console.log("\nStep 5: Bob finalizing the received transfer...");const p=await finalizeReceivedTransaction(JSON.stringify(n),JSON.stringify(w)),y=JSON.parse(p);console.log("Transfer finalized successfully!"),console.log("Token ID:",y.tokenId),console.log("New owner: Bob"),console.log("\nStep 6: Verifying transfer..."),console.log("Token is now owned by Bob"),console.log("Alice no longer owns the token"),console.log("\n=== Offline Transfer Test Completed Successfully ==="),window.Android&&window.Android.showToast("Offline transfer test completed successfully!")}catch(e){throw console.error("Offline transfer test failed:",e),window.Android&&window.Android.showToast("Test failed: "+e.message),e}}})();